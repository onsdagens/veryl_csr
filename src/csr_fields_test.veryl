// src/csr_fields_test.veryl

#[test(csr_fields)]
embed (inline) sv{{{

    module test;
        import veryl_csr_CsrPkg::*;
        logic i_clk;
        logic i_reset;
        
        logic i_csr_ena;
        logic [11:0] i_csr_addr;
        logic [31:0] i_rs1_data;
        Reg i_rs1;
        Reg i_rd;
        logic[2:0] i_csr_op;
        logic [31:0] o_data;

        veryl_csr_CsrFields #(
            .Addr('h100),
            .ResetValue('hdead_beef)
        ) csr 
        (
            i_clk,
            i_reset,
            
            i_csr_ena,
            i_csr_addr,
            i_rs1_data,
            i_rs1,
            i_rd,
            i_csr_op,
            
            o_data
        );

        initial begin
            i_clk = 0; 
            i_reset = 1; 

            i_csr_ena = 1;
            i_csr_addr = 'h100;
           
            // hold reset
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 0) else $error("reset");
            
            // test read
            i_reset = 0;
            i_csr_op = CSRRWI;
            i_rs1 = 0; // write with x0, triggers read only
            i_rd  = 1; // rd destination != x0

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'hdead_3e0f) else $error("reset value");
            // test write
            i_rs1_data = 'hdead_0000;
            i_csr_op = CSRRW;

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'hdead_0000) else $error("CSRRW");

            i_csr_op = CSRRS;
            i_rs1_data = 'h0000_beef;

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'hdead_3e0f) else $error("CSRRS");

            i_csr_op = CSRRC;
            i_rs1_data = 'hdead_0000;

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_3e0f) else $error("CSRRC");

            i_csr_op = CSRRC;
            i_rs1_data = 'h0000_beef;

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0000) else $error("CSRRC");

            // test immediate 5 bits, 100
            // this register has no field, thus no write
            i_csr_op = CSRRWI;
            i_rs1 = 'h_1f;

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0000) else $error("CSRRWI 100");

            // field 4..0 
            i_csr_addr = 'h101;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_001f) else $error("CSRRWI 101");

            i_csr_op = CSRRCI;
            i_rs1 = 'h_0f;

            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0010) else $error("CSRRCI 101");

            i_csr_op = CSRRSI;
            i_rs1 = 'h_0d;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_001d) else $error("CSRRSI 101");

            // test immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRWI;
            i_rs1 = 'h_1f;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0f00) else $error("CSRRWI 102");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000_0f1d) else $error("CSRRWI 100");

            // test write 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRW;
            i_rs1_data = 'h_0000_0300;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0300) else $error("CSRRW 102");

            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000_031d) else $error("CSRRWI 100");

            // test clear 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRC;
            i_rs1_data = 'h_ffff_f2ff;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0100) else $error("CSRRC 102");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000_011d) else $error("CSRRWI 100");

            // test set 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRS;
            i_rs1_data = 'hffff_f8ff;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0900) else $error("CSRRC 102");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000_091d) else $error("CSRRWI 100");

            // test immediate 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRWI;
            i_rs1 = 'h_1f;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0003) else $error("CSRRWI 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_391d) else $error("CSRRWI 100");

            // test set 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRS;
            i_rs1_data = 'hffff_f8ff;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0900) else $error("CSRRC 102");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000_391d) else $error("CSRRWI 100");

            // test clear imm 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRCI;
            i_rs1 = 'h_0;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0003) else $error("CSRRCI 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_391d) else $error("CSRRWI 100");

            // test write 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRW;
            i_rs1_data = 'h_ffff_fffe;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0002) else $error("CSRRW 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_291d) else $error("CSRRWI 100");

            // test set 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRS;
            i_rs1_data = 'h_ffff_fffd;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0003) else $error("CSRRS 103");

            // test clear 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRC;
            i_rs1_data = 'h_ffff_fffe;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0001) else $error("CSRRC 103");

            // test clear immediate 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRCI;
            i_rs1 = 'h_1f;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0000) else $error("CSRRCI 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_091d) else $error("CSRRWI 100");

            // test set immediate 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRSI;
            i_rs1 = 'h_1f;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0003) else $error("CSRRCI 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_391d) else $error("CSRRWI 100");

            // test set immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRSI;
            i_rs1 = 'h_1f;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0f00) else $error("CSRRSI 102");

            // test clear immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRCI;
            i_rs1 = 'h_1f;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0000) else $error("CSRRCI 102");

            // test write immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRWI;
            i_rs1 = 'h_17;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0700) else $error("CSRRWI 102");

            // test write immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRW;
            i_rs1_data = 'hffff_f5ff;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0500) else $error("CSRRW 102");

            // test set immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRS;
            i_rs1_data = 'hffff_f2ff;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0700) else $error("CSRRW 102");

            // test clear immediate 102
            i_csr_addr = 'h102; 
            i_csr_op = CSRRC;
            i_rs1_data = 'hffff_f2ff;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0500) else $error("CSRRW 102");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000351d) else $error("CSRRWI 100");

            // test clear immediate 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRCI;
            i_rs1 = 'h_1f;
            i_rd = 0; // no read
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0000) else $error("CSRRCI 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            i_rd = 1; // read
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h8000051d) else $error("CSRRWI 100");

            // test clear immediate 103
            i_csr_addr = 'h103; 
            i_csr_op = CSRRCI;
            i_rs1 = 'h_1f;
            i_rd = 1; // with read
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000_0000) else $error("CSRRCI 103");

            // read whole register
            i_csr_addr = 'h100; 
            i_csr_op = CSRRWI;
            i_rd = 1; // read
            #10; i_clk=1; #10; i_clk=0;
            assert (o_data == 'h0000051d) else $error("CSRRWI 100");


            $finish;
         end
   endmodule
}}}
